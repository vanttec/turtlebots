<launch>

<!--////////////////////////////////////////////////////////////////////////////// -->
<!--/////////////////////////////////NO MOVER///////////////////////////////////// -->
<!--////////////////////////////////////////////////////////////////////////////// -->

  <!-- Debug flag -->
  <arg name="debug" default="0"/>

  <!-- Vehicle's initial pose -->
  <arg name="x"     default="0"/>
  <arg name="y"     default="10"/>
  <arg name="z"     default="-55"/>
  <arg name="roll"  default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw"   default="0"/>

  <arg name="use_geodetic" default="false"/>
  <arg name="latitude" default="0"/>
  <arg name="longitude" default="0"/>
  <arg name="depth" default="0"/>

  <arg name="latitude_ref" default="0"/>
  <arg name="longitude_ref" default="0"/>
  <arg name="altitude_ref" default="0"/>

  <arg name="mode" default="vtec_u3_default"/>
  <!-- Vehicle's namespace -->
  <arg name="namespace" default="vtec_u3"/>
  <arg name="world_frame" default="world"/>

  <group ns="$(arg namespace)">
    <param name="robot_description"
           command="$(find xacro)/xacro --inorder '$(find vtec_u3_description)/robots/$(arg mode).xacro' debug:=$(arg debug) namespace:=$(arg namespace)" />
    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -model $(arg namespace) -param /$(arg namespace)/robot_description"/>
    <!-- A joint state publisher plugin already is started with the model, no need to use the default joint state publisher -->
    <!-- Publish robot model for ROS -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen">
      <param name="robot_description" value="/$(arg namespace)/robot_description" />
    </node> 
  </group> 

    <!-- Enable camera gazebo plugin-->
  <include file="$(find realsense_gazebo_plugin)/launch/depth_procfront.launch">
  </include>

  <!-- check if you are simulating robot with gazebo -->
  <arg name="gazebo" default="false"/>
  <group unless="$(arg gazebo)">
  </group>

<!--////////////////////////////////////////////////////////////////////////////// -->
<!-- ///////////////////////////INICIA AQUI/////////////////////////////////////// -->
<!--////////////////////////////////////////////////////////////////////////////// -->

  <!-- Begin Path marker-->
  <group ns="Pathmarker">
    <param name="robot_description"
          command="$(find xacro)/xacro --inorder '$(find sim_challenges)/urdf/pathmarker.xacro' "/> 
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-x 4 -y 10 -z -55 -urdf -param robot_description -model path_marker"/>
  </group> 
  
  <!-- Begin Gate -->
  <group ns="Gate">
    <param name="robot_description"
      command="$(find xacro)/xacro --inorder '$(find sim_challenges)/urdf/gate.xacro' "/>  
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-x 7 -y 10 -z -55 -urdf -param robot_description -model gate_1"/> 
  </group>

  <!-- Begin Buoy1 (GUN) -->
  <group ns="Buoy1"> 
    <param name="robot_description"
      command="$(find xacro)/xacro --inorder '$(find sim_challenges)/urdf/buoy.xacro' "/> 
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-x 9 -y 10 -z -55 -urdf -param robot_description -model buoy_1"/> 
  </group> 

    <!-- Begin Buoy2 (Badge) -->
  <group ns="Buoy2"> 
    <param name="robot_description"
      command="$(find xacro)/xacro --inorder '$(find sim_challenges)/urdf/buoy2.xacro' "/> 
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-x 9 -y 10 -z -55 -urdf -param robot_description -model buoy_2"/> 
  </group> 

  <!-- Begin Bin1-->
  <group ns="Bin1">
    <param name="robot_description"
          command="$(find xacro)/xacro --inorder '$(find sim_challenges)/urdf/bin1.xacro' "/> 
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-x 10 -y 10 -z -59 -urdf -param robot_description -model bin_1"/>
  </group>

</launch>
 